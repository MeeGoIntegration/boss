Dependencies
============

Install rabbitmq on a server:
 echo deb http://www.rabbitmq.com/debian/ testing main > /etc/apt/sources.list.d/rabbitmq.list
 apt-get update
 apt-get install rabbitmq-server

On that server, for the demos we'll need (as root or rabbitmq user):
 rabbitmqctl add_vhost ruote-test
 rabbitmqctl add_user ruote ruote
 rabbitmqctl set_permissions -p ruote-test ruote '.*' '.*' '.*'

The demo refers to this amqp server as 'amqpvm' so put an entry in
/etc/hosts to ensure that resolves correctly.

Ruby
====

Ruby package management on Debian is.... interesting. It doesn't
integrate naturally with native packaging. To resolve this we'll use a
single system gem called Bundler and then keep the rest in-project in
a similar way to buildout for python. The goal will be to produce
properly packaged versions of relevant gems. More notes below.

For now:
 apt-get install build-essential git-core ruby1.8-full rubygems1.8 ruby1.8-dev ri1.8

For Ubuntu you may need:
  https://edge.launchpad.net/~ubuntu-on-rails/+archive/ppa

We need Bundler so as root (not sudo, it breaks permissions):
  gem1.8 install bundler

I've had some problems that seemed to be 1.9.1 related; however that
may be down to ruby inexperience. 1.9.1 should be investigated further
as it offers native threading.

Ruote + Co
==========

To pull the git sources for the local development copies of the gems run:

  cd ruote
  ./get-git.sh


Demo
====

See the demo/README info to setup the prerequisites
Run ./RUN_DEMO.sh


Python
======

Dependencies:
  python-amqplib


Managing Modules/Gems in Deployment
===================================

Two options : RVM and Bundler

RVM appears to be a little like buildout for python but rvm's primary
use case is making it easy to install + test out multiple ruby
interpeters.

  http://rvm.beginrescueend.com

rvm is used by the ruoute team.

To install:
 # echo 'rvm_path=/maemo/devel/rvm/' > $HOME/.rvmrc
 bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-head )

Then follow instructions to install (or optionally use
 source $HOME/.rvm/scripts/rvm
or
 source $rvm_path/scripts/rvm
in each ruby shell

RVM is a bit like gentoo - it builds *everything* (including ruby
itself) and I don't think it's right for BOSS development but may be
useful if we look at other rubies for performance in the future.

Bundler is about avoiding vendor gems and keeps gems installed locally
to the project. It's probably a sufficient solution and may be cleaner
too.

http://gembundler.com/

Dependencies

(s=packaged by suse, l=packaged by lbt)

rabbitmq-server >=1.7.2

ruote (lbt's version) :
l rufus-json >= 0.2.3
l rufus-cloche >= 0.1.17
l rufus-dollar
l rufus-mnemo >= 1.1.0
s rufus-scheduler >= 2.0.5
l rufus-treechecker >= 1.0.3
s rake
s yard
s json
s builder
l mailtrap
s jeweler

ruote-amqp (lbt's version) :
l rubygem-rufus-json >= 0.1.0  
l rubygem-amqp >= 0.6.6  
l rubygem-ruote >= 2.1.5  

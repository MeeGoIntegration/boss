#!/bin/sh
# postinst script for boss
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    install|upgrade|configure)
     
        # If the package has default file it could be sourced, so that
        # the local admin can overwrite the defaults
     
        # Sane defaults:
	SERVER_HOME=/var/lib/boss
	SERVER_LOGDIR=/var/log/boss
	SERVER_DATABASE=/var/spool/boss
	SERVER_USER=boss
	SERVER_NAME="BOSS"
	SERVER_GROUP=boss
	# and allow local overrides
	[ -f "/etc/default/boss" ] && . /etc/default/boss

        # create user to avoid running server as root
        # 1. create group if not existing
	if ! getent group | grep -q "^$SERVER_GROUP:" ; then
            echo -n "Adding group $SERVER_GROUP.."
            addgroup --quiet --system $SERVER_GROUP 2>/dev/null ||true
            echo "..done"
	fi
        # 2. create dirs if not existing
	test -d $SERVER_HOME || mkdir $SERVER_HOME
	test -d $SERVER_LOGDIR || mkdir $SERVER_LOGDIR
	test -d $SERVER_DATABASE || mkdir $SERVER_DATABASE
        # 3. create user if not existing
        if ! getent passwd | grep -q "^$SERVER_USER:"; then
            echo -n "Adding system user $SERVER_USER.."
            adduser --quiet \
                --system \
                --ingroup $SERVER_GROUP \
                --no-create-home \
                --disabled-password \
                $SERVER_USER 2>/dev/null || true
            echo "..done"
	fi
        # 4. adjust passwd entry
	usermod -c "$SERVER_NAME" \
            -d $SERVER_HOME   \
            -g $SERVER_GROUP  \
            $SERVER_USER
        # 5. adjust file and directory permissions
	if ! dpkg-statoverride --list $SERVER_HOME >/dev/null
	then
            chown -R $SERVER_USER:$SERVER_GROUP $SERVER_HOME
            chmod u=rwx,g=rxs,o= $SERVER_HOME
	fi
	if ! dpkg-statoverride --list $SERVER_LOGDIR >/dev/null
	then
            chown -R $SERVER_USER:$SERVER_GROUP $SERVER_LOGDIR
            chmod u=rwx,g=rxs,o= $SERVER_LOGDIR
	fi
	if ! dpkg-statoverride --list $SERVER_DATABASE >/dev/null
	then
            chown -R $SERVER_USER:$SERVER_GROUP $SERVER_DATABASE
            chmod u=rwx,g=rxs,o= $SERVER_DATABASE
	fi

	# 6. create the boss user/vhost etc if we have rabbitmqctl
	if [ -e /usr/sbin/rabbitmqctl ]; then
	    echo "Adding boss exchange/user and granting access"
	    rabbitmqctl add_vhost boss || true
	    rabbitmqctl add_user boss boss || true
	    rabbitmqctl set_permissions -p boss boss '.*' '.*' '.*' || true
	fi
	;;
    abort-upgrade|abort-remove|abort-deconfigure)
	;;
    *)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

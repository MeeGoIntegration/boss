
- # under the MIT license, see LICENSE.txt

- @_uses_fluo = true

%h1
  workitem
  = @workitem.fei.sid

#fluo

%form{ :method => 'POST', :enctype => 'multipart/form-data', :accept_charset => 'UTF-8' }

  %input{ :type => 'hidden', :name => '_method', :value => 'PUT' }
  %input{ :type => 'hidden', :name => '_snowman', :value => '&#9731;' }

  %table.details
    %tr
      %td
        participant
      %td
        &= @workitem.participant_name
    %tr
      %td
        dispatched at
      %td
        - if @workitem.dispatched_at
          = Time.parse(@workitem.dispatched_at).localtime.strftime('%Y/%m/%d %H:%M:%S')
    %tr
      %td
        last modified
      %td
        = Time.parse(@workitem.h.put_at).localtime.strftime('%Y/%m/%d %H:%M:%S')
    %tr
      %td
        wf name / revision
      %td
        = "#{@workitem.wf_name} / #{@workitem.wf_revision}"

    %tr
      %td.no_border{ :colspan => 2 }
        &nbsp;

    %tr
      %td
        process
      %td
        GET
        = alink(:processes, @workitem.fei.wfid)
    %tr
      %td
        expression
      %td
        GET
        = alink(:expressions, @workitem.fei.sid)
    %tr
      %td
        other workitems
      %td
        GET
        = alink(:workitems, @workitem.fei.wfid)

    %tr
      %td.no_border{ :colspan => 2 }
        &nbsp;

    %tr
      %td
        params
      %td
        - fields = @workitem.fields.dup
        - params = fields.delete('params') || {}
        - params.delete('ref')
        - fields.delete('dispatched_at')
        &= Rufus::Json.encode(params)[1..-2]
    %tr
      %td
        fields
      %td.no_padding
        %textarea{ :name => "fields", :cols => 80, :rows => 10 } #{Rufus::Json.pretty_encode(@workitem.fields)}
    %tr
      %td
        proceed ?
      %td
        %input{ :type => 'checkbox', :name => '_proceed' }
    %tr
      %td
      %td
        %input{ :type => 'submit', :value => "PUT /_ruote/workitems/#{@workitem.fei.sid}" }

:javascript

  $(document).ready(function() {

    Rk.fitFluo($('table.details'));

    var proc_rep = #{process_tree(@workitem)};

    RuoteFluo.render('#fluo', proc_rep, { 'fit' : 'down' });
    RuoteFluo.pin('#fluo', '#{@workitem.fei.expid}', 'workitem');

    Rk.onClickZoom('#fluo');
  });


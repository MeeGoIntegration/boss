
#overlay
#editor
  #fluo
  #fluo_editor
  .editor_buttons
    %button.use{ :value => 'Ruby' } use (Ruby)
    %button.use{ :value => 'Json' } use (JSON)
    %button.use{ :value => 'Radial' } use (Radial)
    %button.discard{ :title => 'close' } discard

:javascript

  $('textarea.variables').hide();

  $('#overlay').hide();
  $('#editor').hide();

  $('button.use').each(function(i, e) {
    $(e).attr('title', 'close and use this definition as ' + e.value);
  });

  $('button.use').on('click', function(ev) {
    RkEditor.hide(ev.target.value);
    return false;
  });
  $('button.discard').on('click', function() {
    RkEditor.hide(false);
    return false;
  });

  // disable "save as Ruby" for now
  //
  var $ruby = $('button.use[value="Ruby"]');
  $ruby.attr(
    'disabled',
    'disabled');
  $ruby.attr(
    'title',
    $ruby.attr('title') +
    ' (disabled for now, Radial and JSON are sufficient)');

  var RkEditor = (function() {

    var self = this;

    this.init = function() {

      var tree = window.tree || #{sample_process_tree};
      var def = $('#tree').val();
      if (def.match(/\s*\[/)) tree = JSON.parse(def);

      RuoteFluoEditor.render('#fluo_editor', tree);
      RuoteFluo.render('#fluo', tree);

      $('#fluo_editor')[0].onChange = function(tree) {
        RuoteFluo.render('#fluo', tree);
      }
      $('#fluo_editor')[0].onOver = function(expid) {
        RuoteFluo.highlight('#fluo', expid);
      }
    }

    this.show = function() {

      $('#overlay').css('height', '' + $(document).height() + 'px');

      $('#overlay').slideDown(function() {
        $('#editor').show();
        RkEditor.init()
      });
    }

    this.hide = function(use) {

      $('#editor').hide();
      $('#overlay').hide();

      if (use) $('#tree').val(RuoteFluoEditor['as' + use]('#fluo_editor'));
    }

    return this;

  }).apply({});


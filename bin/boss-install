#!/bin/bash

# Sane defaults:
SERVER_HOME=/var/lib/boss
SERVER_LOGDIR=/var/log/boss
SERVER_DATABASE=/var/spool/boss
SERVER_USER=boss
SERVER_NAME="BOSS"
SERVER_GROUP=boss

# create user to avoid running server as root
# 1. create group if not existing
if ! getent group | grep -q "^$SERVER_GROUP:" ; then
    echo -n "Adding group $SERVER_GROUP.."
    groupadd --system $SERVER_GROUP 2>/dev/null ||true
    echo "..done"
fi
# 2. create dirs if not existing
test -d $SERVER_HOME || mkdir -p $SERVER_HOME
test -d $SERVER_DATABASE || mkdir -p $SERVER_DATABASE
test -d $SERVER_LOGDIR || mkdir -p $SERVER_LOGDIR

# 3. create user if not existing
if ! getent passwd | grep -q "^$SERVER_USER:"; then
    echo -n "Adding system user $SERVER_USER.."
    useradd --system -d $SERVER_HOME -g $SERVER_GROUP \
	$SERVER_USER 2>/dev/null || true
    echo "..done"
fi
# 4. adjust passwd entry
usermod -c "$SERVER_NAME" \
    -d $SERVER_HOME   \
    -g $SERVER_GROUP  \
    $SERVER_USER
# 5. adjust file and directory permissions
chown -R $SERVER_USER:$SERVER_GROUP $SERVER_HOME
chmod -R u=rwx,g=rxs,o= $SERVER_HOME

chown -R $SERVER_USER:$SERVER_GROUP $SERVER_LOGDIR
chmod -R u=rwx,g=rxs,o= $SERVER_LOGDIR

chown -R $SERVER_USER:$SERVER_GROUP $SERVER_DATABASE
chmod -R u=rwx,g=rwxs,o= $SERVER_DATABASE

# 6. create the boss user/vhost etc if we have rabbitmqctl
echo "Starting RabbitMQ and configuring to auto-start"
systemctl enable epmd.service
systemctl enable rabbitmq-server.service
systemctl start epmd.service
systemctl start rabbitmq-server.service
if [ -e /usr/sbin/rabbitmqctl ]; then
    echo "Adding boss exchange/user and granting access"
    rabbitmqctl add_vhost boss || true
    rabbitmqctl add_user boss boss || true
    rabbitmqctl set_permissions -p boss boss '.*' '.*' '.*' || true
fi
#7. tell supervisor to pickup config and code changes
skynet apply || true
skynet reload boss || true


#! /bin/sh
# Copyright (c) 2010 Nokia
# Author David Greaves <david@dgreaves.com>
# (based on standard openSuse init.d files)
#
# /etc/init.d/boss
#
### BEGIN INIT INFO
# Provides:          boss
# Required-Start:    $remote_fs $network $rabbitmq-server
# Required-Stop:     $remote_fs $network $rabbitmq-server
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: BOSS participant manager
# Description:       BOSS participant manager
### END INIT INFO

set -e
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="BOSS service"
NAME=$0
SCRIPTNAME=/etc/init.d/$NAME
SNAME=boss
CONFIG=/etc/sysconfig/boss

. $CONFIG

# Trim trailing /
SERVICE_DIR=${SERVICE_DIR%/}
SERVER_HOME=${SERVER_HOME%/}


assert_service_exists () {
    if [ ! -e ${SERVER_HOME} ]; then
	echo "${SNAME} directory ${SERVER_HOME} does not exist"
	exit 1
    fi
}


#       Function that starts the daemon/service.
d_start()
{
        # Enable automatic start/stop/monitoring
	if [ ! -e ${SERVICE_DIR}/${SNAME} ]; then
	    ln -s ${SERVER_HOME} ${SERVICE_DIR}/${SNAME}
	    echo "${SNAME} enabled. Should start within 5 seconds"
	fi
}

#       Function that stops the daemon/service.
d_stop() {
	# Prevent it from restarting at once by
        # disabling automatic start/stop/monitoring
	assert_service_exists
	if [ -e ${SERVICE_DIR}/${SNAME} ]; then
	    rm ${SERVICE_DIR}/${SNAME}
	fi
	# Shut down the supervise and log too
	svc -dx ${SERVER_HOME}
	echo "Waiting 1 second to shut down logger"
	sleep 1
	svc -dx ${SERVER_HOME}/log
}

ACTION="$1"
case "$ACTION" in
    start)
        echo -n "Starting $DESC"
        d_start
        echo "."
        ;;

    stop)
        echo -n "Stopping $DESC"
        d_stop
        echo "."
        ;;

    restart|force-reload)
	assert_service_exists
	# Take it down twice
	svc -d ${SERVER_HOME}
	echo waiting 2 sec for graceful stop
	sleep 2
	echo restarting
	svc -u ${SERVER_HOME}
	;;

    status)
	assert_service_exists
	if svok ${SERVER_HOME}; then
	    svstat ${SERVER_HOME}
	else
	    echo "Participant ${SNAME} is not running and has no supervisor"
	    [ ! -e ${SERVICE_DIR}/${SNAME} ] && echo "It is not enabled for automatic running"
	fi
        ;;

    log)
	assert_service_exists
	tail --follow=name ${SERVER_LOGDIR}/current | tai64nlocal
        ;;

    *)
        echo "Usage: $NAME {start|stop|restart|force-reload|log}" >&2
        exit 3
        ;;
esac

exit 0